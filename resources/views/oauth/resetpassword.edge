<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Restablecer Contraseña</title>
  <style>
    /* (Estilos iguales a los anteriores, para no repetirlos aquí) */
    * {
      box-sizing: border-box;
    }

    body {
      margin: 0;
      font-family: 'Arial', sans-serif;
      background: url('https://i.postimg.cc/xTf1s4CN/d973cec2-bb1b-488d-b74f-5c6411868c87.jpg') no-repeat center center fixed;
      background-size: cover;
      position: relative;
      min-height: 100vh;
    }

    body::before {
      content: "";
      position: absolute;
      inset: 0;
      background-color: rgba(95, 0, 160, 0.7);
      z-index: -1;
    }

    .auth-container {
      display: flex;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      padding: 1rem;
    }

    .auth-box {
      width: 100%;
      max-width: 400px;
      background: white;
      border-radius: 1.5rem;
      overflow: hidden;
      box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
      display: flex;
      flex-direction: column;
    }

    .auth-header {
      background-color: #6a0dad;
      padding: 1.5rem 1rem 1rem 1rem;
      text-align: center;
      color: white;
      border-top-left-radius: 1.5rem;
      border-top-right-radius: 1.5rem;
    }

    .auth-header h1 {
      margin: 0;
      font-size: 1.3rem;
      font-weight: bold;
    }

    .auth-form-wrapper {
      padding: 2rem 1.5rem 1.5rem 1.5rem;
      background-color: white;
      border-bottom-left-radius: 1.5rem;
      border-bottom-right-radius: 1.5rem;
      display: flex;
      flex-direction: column;
      gap: 1rem;
      align-items: center;
    }

    .auth-form {
      width: 100%;
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }

    .auth-form input {
      padding: 0.75rem 1rem;
      border-radius: 2rem;
      border: none;
      background-color: #f0f0f0;
      font-size: 1rem;
      width: 100%;
    }

    .auth-form button {
      background-color: #6a0dad;
      color: white;
      border: none;
      border-radius: 2rem;
      padding: 0.75rem;
      font-size: 1rem;
      font-weight: bold;
      cursor: pointer;
      transition: background-color 0.3s ease;
      width: 100%;
    }

    .auth-form button:hover {
      background-color: #530f9b;
    }

    .back-link {
      margin-top: 1rem;
      color: #6a0dad;
      text-decoration: none;
      font-weight: bold;
      text-align: center;
      display: block;
    }
  </style>
</head>
<body>
  <div class="auth-container">
    <div class="auth-box">
      <div class="auth-header">
        <h1>Restablecer Contraseña</h1>
      </div>

      <div class="auth-form-wrapper">
        @if(error)
          <div style="color: red; font-weight: bold; margin-bottom: 1rem;">
            {{ error }}
          </div>
        @endif

        <form method="POST" action="/oauth/resetpassword?redirect_uri={{ redirectUri }}" class="auth-form" id="resetForm">
          <input type="email" name="email" placeholder="Correo electrónico" required value="{{ email || '' }}" />
          <input type="text" name="token" placeholder="Código de verificación" required value="{{ token || '' }}" />
          <input type="password" name="password" placeholder="Nueva contraseña" required autocomplete="new-password" />
          <div
            id="password-requirements"
            style="font-size: 0.85rem; color: #666; margin-top: -0.5rem; margin-bottom: 1rem; width: 100%;"
          >
            La contraseña debe tener al menos 8 caracteres, una mayúscula, una minúscula, un número y un carácter especial.
          </div>
          <input type="password" name="password_confirmation" placeholder="Confirmar nueva contraseña" required autocomplete="new-password" />
          <div
            id="confirm-message"
            style="font-size: 0.85rem; color: red; margin-top: -0.5rem; margin-bottom: 1rem; width: 100%; display: none;"
          >
            Las contraseñas no coinciden.
          </div>
          <input type="hidden" name="redirect_uri" value="{{ redirectUri || '' }}" />
          <button type="submit">Restablecer</button>
        </form>

        <a href="/oauth/login?redirect_uri={{ redirectUri }}" class="back-link">Volver al inicio de sesión</a>
      </div>
    </div>
  </div>

  <script>
    const passwordInput = document.querySelector('input[name="password"]')
    const confirmInput = document.querySelector('input[name="password_confirmation"]')
    const form = document.getElementById('resetForm')
    const fixedMsgDiv = document.getElementById('password-requirements')
    const confirmMsgDiv = document.getElementById('confirm-message')

    // Crear un div para mensaje error dinámico para contraseña
    const msgDiv = document.createElement('div')
    msgDiv.style.color = 'red'
    msgDiv.style.fontSize = '0.9rem'
    msgDiv.style.marginTop = '0.25rem'
    passwordInput.parentNode.insertBefore(msgDiv, passwordInput.nextSibling)

    function validarPassword(password) {
      const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$/
      return regex.test(password)
    }

    function validarConfirmacion() {
      if (confirmInput.value === '') {
        confirmMsgDiv.style.display = 'none'
        confirmInput.style.borderColor = ''
        return true
      }
      if (confirmInput.value !== passwordInput.value) {
        confirmMsgDiv.style.display = 'block'
        confirmInput.style.borderColor = 'red'
        return false
      } else {
        confirmMsgDiv.style.display = 'none'
        confirmInput.style.borderColor = 'green'
        return true
      }
    }

    passwordInput.addEventListener('input', () => {
      if (passwordInput.value === '') {
        msgDiv.textContent = ''
        passwordInput.style.borderColor = ''
        fixedMsgDiv.style.display = 'block'
      } else if (!validarPassword(passwordInput.value)) {
        msgDiv.textContent = 'La contraseña no cumple con los requisitos mínimos.'
        passwordInput.style.borderColor = 'red'
        fixedMsgDiv.style.display = 'none'
      } else {
        msgDiv.textContent = ''
        passwordInput.style.borderColor = 'green'
        fixedMsgDiv.style.display = 'block'
      }
      // Al cambiar password, validar confirmación para actualizar estado
      validarConfirmacion()
    })

    confirmInput.addEventListener('input', () => {
      validarConfirmacion()
    })

    form.addEventListener('submit', (e) => {
      const passValida = validarPassword(passwordInput.value)
      const confirmValida = validarConfirmacion()

      if (!passValida || !confirmValida) {
        e.preventDefault()
        let mensaje = ''
        if (!passValida) mensaje += 'Por favor, ingresa una contraseña válida que cumpla los requisitos.\n'
        if (!confirmValida) mensaje += 'Las contraseñas no coinciden.'
        alert(mensaje)
        if (!passValida) passwordInput.focus()
        else if (!confirmValida) confirmInput.focus()
      }
    })
  </script>
</body>
</html>
